/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.userInterface;

import main.sgt.Coordenador;
import main.sgt.SGT;
import main.sgt.Turno;
import main.sgt.UC;
import main.sgt.exceptions.AlunoNaoEstaInscritoNaUcException;
import main.sgt.exceptions.InvalidUserTypeException;
import main.sgt.exceptions.UtilizadorJaExisteException;

import javax.swing.table.DefaultTableModel;
import java.util.List;

import static main.userInterface.interfaceUtils.prepareTable;
import static main.userInterface.interfaceUtils.shiftFromString;

/**
 *
 * @author pedro
 */
@SuppressWarnings({"Anonymous2MethodRef", "Convert2Lambda", "TryWithIdenticalCatches", "FieldCanBeLocal", "unused"})
public class JCoordenadorGerirAlunos extends javax.swing.JFrame {
    private SGT sgt;
    private String ucOfUser;
    
    /**
     * Creates new form CoordenadorGerirAlunos
     * @param sgt Business logic instance 
     */
    JCoordenadorGerirAlunos(SGT sgt) throws InvalidUserTypeException {
        this.sgt = sgt;
        if(this.sgt.getLoggedUser() instanceof Coordenador){
            this.ucOfUser = ((Coordenador) this.sgt.getLoggedUser()).getUcRegida();
        }else{
            this.setVisible(false);
            throw new InvalidUserTypeException();
        }
        initComponents();
        initTurnosComboBox();
    }

    private void initTurnosComboBox() {
        this.jComboBoxTurnos.removeAllItems();
        List<Turno> turnosOfUC = this.sgt.getTurnosOfUC(this.ucOfUser);
        turnosOfUC.stream()
                .filter(Turno::ePratico)
                .map(interfaceUtils::makeShiftString)
                .forEach(this.jComboBoxTurnos::addItem);
    }

    private void updateAlunosTables(int turno) {
        UC uc = this.sgt.getUC(this.ucOfUser);
        List<String> alunosInShift = uc.getTurno(turno,true)
                .getAlunos();
        List<String> alunosOffShift = uc.getAlunos();
        alunosOffShift.removeAll(alunosInShift);

        //Update in shift table
        DefaultTableModel tModel = prepareTable(alunosInShift.size(),1,this.jTableAlunosEstao);
        for (int i = 0; i < alunosInShift.size(); i++) {
            String a = alunosInShift.get(i);
            tModel.setValueAt(a, i, 0);
        }
        this.jTableAlunosEstao.setModel(tModel);
        //Update of shift table
        tModel = prepareTable(alunosOffShift.size(),1,this.jTableAlunosNEstao);
        for (int i = 0; i < alunosOffShift.size(); i++) {
            String a = alunosOffShift.get(i);
            tModel.setValueAt(a, i, 0);
        }
        this.jTableAlunosNEstao.setModel(tModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxTurnos = new javax.swing.JComboBox<>();
        jScrollPaneAlunosEstao = new javax.swing.JScrollPane();
        jTableAlunosEstao = new javax.swing.JTable();
        jScrollPaneAlunosNEstao = new javax.swing.JScrollPane();
        jTableAlunosNEstao = new javax.swing.JTable();
        jButtonAdicionar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jLabelTurno = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBoxTurnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTurnosActionPerformed(evt);
            }
        });

        jTableAlunosEstao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alunos que estão no turno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneAlunosEstao.setViewportView(jTableAlunosEstao);

        jTableAlunosNEstao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alunos que não estão no turno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneAlunosNEstao.setViewportView(jTableAlunosNEstao);

        jButtonAdicionar.setText("Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jButtonRemover.setText("Remover");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonFechar.setText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jLabelTurno.setText("Turno");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonFechar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPaneAlunosNEstao, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonAdicionar)
                                    .addComponent(jButtonRemover))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(jScrollPaneAlunosEstao, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelTurno)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabelTurno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneAlunosEstao, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPaneAlunosNEstao, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jButtonAdicionar)
                        .addGap(56, 56, 56)
                        .addComponent(jButtonRemover)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFechar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        int selectedRow = this.jTableAlunosNEstao.getSelectedRow();
        if(selectedRow==-1) return;
        String aluno = (String) this.jTableAlunosNEstao.getValueAt(selectedRow, 0);
        int turno = shiftFromString((String) this.jComboBoxTurnos.getSelectedItem());
        try {
            this.sgt.moveAlunoToTurno(aluno,this.ucOfUser,turno);
            DefaultTableModel tableModel = (DefaultTableModel) this.jTableAlunosNEstao.getModel();
            tableModel.removeRow(selectedRow);
            this.jTableAlunosNEstao.setModel(tableModel);
            tableModel = (DefaultTableModel) this.jTableAlunosEstao.getModel();
            tableModel.addRow(new Object[]{aluno});
            this.jTableAlunosEstao.setModel(tableModel);
        } catch (UtilizadorJaExisteException | AlunoNaoEstaInscritoNaUcException e) {
            updateAlunosTables(turno);
        } catch (InvalidUserTypeException e) {
            e.printStackTrace();
            System.out.println("Invalid user");
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        int selectedRow = this.jTableAlunosEstao.getSelectedRow();
        String aluno = (String) this.jTableAlunosEstao.getValueAt(selectedRow, 0);
        int turno = shiftFromString((String) this.jComboBoxTurnos.getSelectedItem());

        try {
            this.sgt.removeAlunoFromTurno(this.ucOfUser,aluno,turno);
        } catch (AlunoNaoEstaInscritoNaUcException | UtilizadorJaExisteException e) {
            updateAlunosTables(turno);
            return;
        }

        DefaultTableModel tableModel;
        tableModel = (DefaultTableModel) this.jTableAlunosEstao.getModel();
        tableModel.removeRow(selectedRow);
        this.jTableAlunosEstao.setModel(tableModel);

        tableModel = (DefaultTableModel) this.jTableAlunosNEstao.getModel();
        tableModel.addRow(new Object[]{aluno});
        this.jTableAlunosNEstao.setModel(tableModel);

    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jComboBoxTurnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTurnosActionPerformed
        int turno = shiftFromString((String) this.jComboBoxTurnos.getSelectedItem());
        updateAlunosTables(turno);
    }//GEN-LAST:event_jComboBoxTurnosActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JCoordenadorGerirAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JCoordenadorGerirAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JCoordenadorGerirAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JCoordenadorGerirAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JCoordenadorGerirAlunos(new SGT()).setVisible(true);
                } catch (InvalidUserTypeException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JComboBox<String> jComboBoxTurnos;
    private javax.swing.JLabel jLabelTurno;
    private javax.swing.JScrollPane jScrollPaneAlunosEstao;
    private javax.swing.JScrollPane jScrollPaneAlunosNEstao;
    private javax.swing.JTable jTableAlunosEstao;
    private javax.swing.JTable jTableAlunosNEstao;
    // End of variables declaration//GEN-END:variables
}
